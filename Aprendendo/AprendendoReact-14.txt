Trabalhando com rotas 

Instalando essa biblioteca
npm i react-router-dom

O react-router-dom é uma biblioteca que facilita a navegação e o gerenciamento de rotas em aplicações React

VOU UTILIZAR MUITO

Criando uma pasta chamada pages, para ficar as páginas criadas
Home 
Sobre

Criando arquivo 'routes' para as rotas das páginas
Dentro dele importamos algumas coisas da biblioteca react-router-dom
E importamos as páginas

Estrutura das rotas :

    function RoutesApp(){
    return(
        <BrowserRouter>
            <Routes>
                <Route path='/' element={ <Home/> }/>
                <Route path='/Sobre' element={ <Sobre/> }/>
            </Routes>
        </BrowserRouter>
    )
}


BrowserRouter: Envolve a aplicação e permite o uso da API do React Router.
Routes: É um contêiner para um conjunto de rotas (Route). Ele renderiza a primeira Route ou Redirect que corresponder à localização atual.
Route: Define uma rota no aplicativo. Utiliza a prop path para especificar a URL e renderiza o componente correspondente.
path: Quando o usuário navega para a raiz da aplicação (/), o componente Home será renderizado.

Depois só importa-la para o app.js
////////////////////////////////////////////////////////////////////////////////////////////////////////////

Para facilitar a navegação dentro das paginas, pela biblioteca importamos o Link 

Exemplo de utilização:
<Link to={"/Sobre"}>Sobre</Link>

////////////////////////////////////////////////////////////////////////////////////////////////////////////
Melhorando nossas rotas


Melhorando as nossa páginas
criando componente Header e estilizando

<></> = fragmento, uma div onde não tem nenhuma alteração visual (utilizei no app.js)

  return (
    <>
    <RoutesApp/>
    </>
  );

Obs: O componente Link no css vira a tag ancora 

////////////////////////////////////////////////////////////////////////////////////////////////////////////

Criando uma rota Not Found 

Criar como se fosse uma página normal, porém vc muda o path na hora de criar uma rota pra ele
colocando no path "*" o react já entende que é uma página de Not Found

////////////////////////////////////////////////////////////////////////////////////////////////////////////

Criando parâmetros dinâmicos


Criar como se fosse uma página normal, porém vc muda o path na hora de criar uma rota pra ele
<Route path='/Produto/:id' element={ <Produto/> }/>

Além disso usando (importando) o useParams

O useParams do React Router é um hook que permite acessar os parâmetros da URL em um componente funcional no React. 
Isso é útil quando você precisa extrair partes da URL que foram definidas como parâmetros dinâmicos em suas rotas.

ex: MelhorandoRotas   Arquivo: pages/Produto/index.js
